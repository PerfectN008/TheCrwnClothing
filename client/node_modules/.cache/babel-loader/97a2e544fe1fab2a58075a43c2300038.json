{"ast":null,"code":"var _jsxFileName = \"D:\\\\Turorials\\\\React Js\\\\Projects\\\\e-commerce\\\\src\\\\Components\\\\SignIn\\\\SignIn.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../FormInput/FormInput';\nimport CustomButton from '../CustomButton/CustomButton';\nimport { auth, signInWithGoogle } from '../../Firebase/Firebase';\nimport { googleSignInStart } from '../../Redux/User/UserActions';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './SignIn.Styles';\n\nclass SignIn extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(SignInContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SignInTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Sign in using your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      handleChange: this.handleChange,\n      value: this.state.email,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      label: \"password\",\n      handleChange: this.handleChange,\n      value: this.state.password,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ButtonsBarContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, \"Sign In With Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["D:/Turorials/React Js/Projects/e-commerce/src/Components/SignIn/SignIn.js"],"names":["React","Component","connect","FormInput","CustomButton","auth","signInWithGoogle","googleSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","constructor","handleSubmit","e","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","log","handleChange","name","value","target","render","props","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../FormInput/FormInput';\r\nimport CustomButton from '../CustomButton/CustomButton';\r\n\r\nimport { auth, signInWithGoogle } from '../../Firebase/Firebase';\r\nimport { googleSignInStart } from '../../Redux/User/UserActions';\r\n\r\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './SignIn.Styles'\r\n\r\nclass SignIn extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        const { email, password } = this.state;\r\n\r\n        try {\r\n            await auth.signInWithEmailAndPassword(email, password);\r\n            this.setState({ email: '', password: '' })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n    handleChange = e => {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value })\r\n    }\r\n    render() {\r\n        const { googleSignInStart } = this.props;\r\n        return (\r\n            <SignInContainer>\r\n                <SignInTitle>I already have an account</SignInTitle>\r\n                <span>Sign in using your email and password</span>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput name='email' type='email' label='Email' handleChange={this.handleChange} value={this.state.email} required />\r\n                    <FormInput name='password' type='password' label='password' handleChange={this.handleChange} value={this.state.password} required />\r\n                    <ButtonsBarContainer>\r\n                        <CustomButton type='submit'>Sign In</CustomButton>\r\n                        <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>Sign In With Google</CustomButton>\r\n                    </ButtonsBarContainer>\r\n                </form>\r\n            </SignInContainer>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart())\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}