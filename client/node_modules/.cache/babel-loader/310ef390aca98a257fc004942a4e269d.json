{"ast":null,"code":"var _jsxFileName = \"D:\\\\Turorials\\\\React Js\\\\Projects\\\\e-commerce\\\\src\\\\Pages\\\\ShopPage.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../Redux/Shop/ShopActions';\nimport { selectIsCollectionFetching, selectIsCollectonsLoaded } from '../Redux/Shop/ShopSelector';\nimport CollectionsOverviewContainer from '../Components/CollectionsOverview/CollectionsOverviewContainer';\nimport CollectionPage from './Collection/Collection';\nimport withSpinner from '../Components/withSpinner/withSpinner';\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFecthing: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectonsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["D:/Turorials/React Js/Projects/e-commerce/src/Pages/ShopPage.js"],"names":["React","Component","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectonsLoaded","CollectionsOverviewContainer","CollectionPage","withSpinner","CollectionPageWithSpinner","ShopPage","componentDidMount","props","render","match","isCollectionLoaded","path","mapStateToProps","isCollectionFecthing","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,0BAAT,QAA2C,2BAA3C;AACA,SAASC,0BAAT,EAAqCC,wBAArC,QAAqE,4BAArE;AAEA,OAAOC,4BAAP,MAAyC,gEAAzC;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,OAAOC,WAAP,MAAwB,uCAAxB;AAEA,MAAMC,yBAAyB,GAAGD,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMG,QAAN,SAAuBX,SAAvB,CAAgC;AAC5BY,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAAER,MAAAA;AAAF,QAAiC,KAAKS,KAA5C;AACAT,IAAAA,0BAA0B;AAC7B;;AAEDU,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAgC,KAAKH,KAA3C;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAFxB;AAGI,MAAA,SAAS,EAAEV,4BAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAMI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACE,IAAK,gBADxB;AAEI,MAAA,MAAM,EAAGJ,KAAD,iBACJ,oBAAC,yBAAD;AACI,QAAA,SAAS,EAAE,CAACG;AADhB,SAEQH,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAkBH;;AA1B2B;;AA6BhC,MAAMK,eAAe,GAAGf,wBAAwB,CAAC;AAC7CgB,EAAAA,oBAAoB,EAAEd,0BADuB;AAE7CW,EAAAA,kBAAkB,EAAEV;AAFyB,CAAD,CAAhD;;AAKA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,0BAA0B,EAAE,MAAMiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { fetchCollectionsStartAsync } from '../Redux/Shop/ShopActions';\r\nimport { selectIsCollectionFetching, selectIsCollectonsLoaded } from '../Redux/Shop/ShopSelector';\r\n\r\nimport CollectionsOverviewContainer from '../Components/CollectionsOverview/CollectionsOverviewContainer'\r\nimport CollectionPage from './Collection/Collection';\r\n\r\nimport withSpinner from '../Components/withSpinner/withSpinner';\r\n\r\nconst CollectionPageWithSpinner = withSpinner(CollectionPage)\r\n\r\nclass ShopPage extends Component{\r\n    componentDidMount(){\r\n        const { fetchCollectionsStartAsync } = this.props;\r\n        fetchCollectionsStartAsync()\r\n    }\r\n\r\n    render(){\r\n        const { match, isCollectionLoaded } = this.props;\r\n        return(\r\n            <div className='shop-page'>\r\n                <Route\r\n                    exact\r\n                    path={`${match.path}`}\r\n                    component={CollectionsOverviewContainer}\r\n                />\r\n                <Route\r\n                    path={`${match.path}/:collectionId`}\r\n                    render={(props) => \r\n                        <CollectionPageWithSpinner\r\n                            isLoading={!isCollectionLoaded}\r\n                            {...props}\r\n                        />\r\n                    }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionFecthing: selectIsCollectionFetching,\r\n    isCollectionLoaded: selectIsCollectonsLoaded\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\r\n\r\n"]},"metadata":{},"sourceType":"module"}